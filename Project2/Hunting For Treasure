#include <iostream>
#include <fstream>
#include <cstring>
#include <vector> // included for vectors

using namespace std;

void print1Dvec(const vector<int> &vec);
void print2Dvec(const vector<vector<int> > &vec);

int main()
{
    // open the file stream
    ifstream infile("collection.txt");
    
    string holder;
    int totRegions, totDays;
    int region, day, numTreasures, numCubes;
    
    // read in the total number of regions and days
    infile >> holder >> totRegions >> holder >> totDays;
    
    // initializes the size and contents of the treasures vector
    vector<int> treasures(totRegions, 0);
    vector<vector<int> > cubes(totRegions);
    
    // initializes the size and contents of the cube vector of vectors
    for(int i = 0; i < totRegions; i++)
    {
        vector<int> newVec(totDays, 0);
        cubes.at(i) = newVec;
    }
    
    // read in the first set
    infile >> holder >> region >> holder >> day;
    while(!infile.fail()) // read to the end of the file
    {
        // check if the next line is treasures or cubes
        infile >> holder;
        if(holder == "treasures") // for treasures
        {
            // read in the number of treasures
            infile >> numTreasures;
               
            /* handle the treasures */
            treasures.at(region-1) = treasures[region-1] + numTreasures;
        }
        else if(holder == "cubes") // for cubes
        {
            // read in the number of cubes
            infile >> numCubes;
                       
            /* handle the cubes */
            cubes[region-1][day-1] = numCubes;
        }
            // read in the next set
            infile >> holder >> region >> holder >> day;
    }
    
    // print the vectors
    print1Dvec(treasures);
    cout << endl;
    print2Dvec(cubes);
                   
    // close the file stream
    infile.close();
                   
return 0;
}

void print1Dvec(const vector<int> &vec)
{
    cout << "[";
    for(int i=0; i<vec.size(); i++)
    {
        cout << " " << vec[i] << " " ;
    }
    cout << "]" << endl;
    
    return;
}
void print2Dvec(const vector<vector<int> > &vec)
{
    for(int i=0; i<vec.size(); i++)
    {
        cout << "[";
        for(int j=0; j<vec[i].size(); j++)
        {
            cout << " " << vec[i][j] << " " ;
        }
        cout << "]" << endl;
    }
    return;
}
