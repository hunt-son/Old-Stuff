#include <iostream>
#include <fstream>
#include <string>
using namespace std;


///////////////////////////FUNCTIONS/////////////////////////////////////////////
double calcHeatTransfer(double k, double t, double d, double diffT, double H){
double heatT = k * t * H * diffT / d;
return heatT;
}
double calcYieldStrength(double E, double H){
double sigma = E * H;
return sigma;
}
double calcCost(double rho, double d, double H){
double mass = 1000 * rho * d * H;
return mass;
}
/////////////////////////////////////////////////////////////////////////////////

int main()
{

//report to out
ofstream out("report.txt");

//declare variables
double t, diffT, H, d, heat, yieldStrength, cost, numMtrl, matID, empty, k, E, rho, k1, k2, k3, k4, k5, k6, E1, E2, E3, E4, E5, E6, rho1, rho2, rho3, rho4, rho5, rho6;
int i=0, index=1,matCount=1, goodMat = 0;
string nameMat;


//read in values (vl) from material_properties.txt
ifstream vl("material_properties.txt");
vl >> k1 >> E1 >> rho1 >> k2 >> E2 >> rho2 >> k3 >> E3 >> rho3 >> k4 >> E4 >> rho4 >> k5 >> E5 >> rho5 >> k6 >> E6 >> rho6;
if (vl.fail()) { cout << "material_properties.txt could not be opened" << endl; }
vl.close();

ifstream mtrl("test_cases.txt");
//Read them in
mtrl >> t >> diffT >> H >> d >> heat >> yieldStrength >> cost >> numMtrl;

if(mtrl.fail()){ cout << "test_cases.txt could not be opened"<< endl; }                  // for future me: first extract from file; then check failure

/////////////////////////////////////////////OUTTER LOOP/////////////////////////////////////////////////////////
while(! mtrl.fail()){ i++;
//reset matCount
  matCount=0;
  goodMat = 0;

  ///////////////////////////////////////////PROCESSING///////////////////////////////////////
//Write to file intial values
  out << "Test Case " << i << endl;
  out << "Q = " << heat << endl << "S = " << yieldStrength << endl << "C = " << cost << endl;

//start processing
  out << "Processing " << numMtrl << " materials" << endl;
 
/////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////INNER LOOP//////////////////////////////////////////////////////////
  while(matCount < numMtrl){
     mtrl >> matID; matCount++;


     if(matID <= 6 && matID >= 1){          //if in range
		//Set initial vaules
       		if (matID == 1){ nameMat = "Slumpy Wetcrete"; k = k1; rho = rho1; E = E1;}
         		else if (matID == 2){ nameMat = "Sky Iron"; k = k2; rho = rho2; E = E2; }
         		else if (matID == 3){ nameMat = "Primal Iron Strongcrete"; k = k3; rho = rho3; E = E3;}
         		else if (matID == 4){ nameMat = "Fluffy Marshmallent"; k = k4; rho = rho4; E = E4;}
         		else if (matID == 5){ nameMat = "Wimpy Pig Ironcrete"; k = k5; rho = rho5; E = E5;}
         		else if (matID == 6){ nameMat = "Air Entrained Polycarbonate"; k = k6; rho = rho6; E = E6;}

      		 //Calculate Material & call functions
       		double heatMat = calcHeatTransfer(k, t, d, diffT, H);
       		double strengthMat = calcYieldStrength(E, H);
       		double costMat = calcCost(rho, d, H);

       		
       		if (heatMat > heat && strengthMat > yieldStrength && costMat < cost){
        		goodMat = goodMat++;
         		out << nameMat << " is acceptable" << endl;
       		}
       		else { out << nameMat << " is unacceptable" << endl;}
     		}

     else if (matID > 6 || matID < 1){ out << "Unknown Material is unacceptable" << endl;} //if out range
  } 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //Final Tally Here
  out << goodMat << " of " << numMtrl << " were acceptable" << endl << endl;
  //Reset values for new read
  mtrl >> t >> diffT >> H >> d >> heat >> yieldStrength >> cost >> numMtrl;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Close out and we Gucci
mtrl.close();
out.close();

return 0;
}
